// Generated from ops_db.json
// https://gist.github.com/bberak/ca001281bb8431d2706afd31401e802b

#pragma once
#ifndef _H_OPCODES_H_
#define _H_OPCODES_H_
#include <cpu.h>
#include <unordered_map>

#define DEF_INSTR( o, x, y ) \
	struct x##: instruction { \
		## x ##() : instruction(y) { instruction_set.insert({o, *this}); } \
		void execute(cpu& cpu) override; };

#define INST_INSTR(x) extern gbemu::instruction_types::##x x##_;
			
namespace gbemu {
	extern std::unordered_map<std::uint16_t, instruction&> instruction_set;
	namespace instruction_types {
			
		DEF_INSTR(0x007F, ld_a_a, "LD A, A");
		DEF_INSTR(0x0078, ld_a_b, "LD A, B");
		DEF_INSTR(0x0079, ld_a_c, "LD A, C");
		DEF_INSTR(0x007A, ld_a_d, "LD A, D");
		DEF_INSTR(0x007B, ld_a_e, "LD A, E");
		DEF_INSTR(0x007C, ld_a_h, "LD A, H");
		DEF_INSTR(0x007D, ld_a_l, "LD A, L");
		DEF_INSTR(0x0047, ld_b_a, "LD B, A");
		DEF_INSTR(0x0040, ld_b_b, "LD B, B");
		DEF_INSTR(0x0041, ld_b_c, "LD B, C");
		DEF_INSTR(0x0042, ld_b_d, "LD B, D");
		DEF_INSTR(0x0043, ld_b_e, "LD B, E");
		DEF_INSTR(0x0044, ld_b_h, "LD B, H");
		DEF_INSTR(0x0045, ld_b_l, "LD B, L");
		DEF_INSTR(0x004F, ld_c_a, "LD C, A");
		DEF_INSTR(0x0048, ld_c_b, "LD C, B");
		DEF_INSTR(0x0049, ld_c_c, "LD C, C");
		DEF_INSTR(0x004A, ld_c_d, "LD C, D");
		DEF_INSTR(0x004B, ld_c_e, "LD C, E");
		DEF_INSTR(0x004C, ld_c_h, "LD C, H");
		DEF_INSTR(0x004D, ld_c_l, "LD C, L");
		DEF_INSTR(0x0057, ld_d_a, "LD D, A");
		DEF_INSTR(0x0050, ld_d_b, "LD D, B");
		DEF_INSTR(0x0051, ld_d_c, "LD D, C");
		DEF_INSTR(0x0052, ld_d_d, "LD D, D");
		DEF_INSTR(0x0053, ld_d_e, "LD D, E");
		DEF_INSTR(0x0054, ld_d_h, "LD D, H");
		DEF_INSTR(0x0055, ld_d_l, "LD D, L");
		DEF_INSTR(0x005F, ld_e_a, "LD E, A");
		DEF_INSTR(0x0058, ld_e_b, "LD E, B");
		DEF_INSTR(0x0059, ld_e_c, "LD E, C");
		DEF_INSTR(0x005A, ld_e_d, "LD E, D");
		DEF_INSTR(0x005B, ld_e_e, "LD E, E");
		DEF_INSTR(0x005C, ld_e_h, "LD E, H");
		DEF_INSTR(0x005D, ld_e_l, "LD E, L");
		DEF_INSTR(0x0067, ld_h_a, "LD H, A");
		DEF_INSTR(0x0060, ld_h_b, "LD H, B");
		DEF_INSTR(0x0061, ld_h_c, "LD H, C");
		DEF_INSTR(0x0062, ld_h_d, "LD H, D");
		DEF_INSTR(0x0063, ld_h_e, "LD H, E");
		DEF_INSTR(0x0064, ld_h_h, "LD H, H");
		DEF_INSTR(0x0065, ld_h_l, "LD H, L");
		DEF_INSTR(0x006F, ld_l_a, "LD L, A");
		DEF_INSTR(0x0068, ld_l_b, "LD L, B");
		DEF_INSTR(0x0069, ld_l_c, "LD L, C");
		DEF_INSTR(0x006A, ld_l_d, "LD L, D");
		DEF_INSTR(0x006B, ld_l_e, "LD L, E");
		DEF_INSTR(0x006C, ld_l_h, "LD L, H");
		DEF_INSTR(0x006D, ld_l_l, "LD L, L");
		DEF_INSTR(0x003E, ld_a_d8, "LD A, d8");
		DEF_INSTR(0x0006, ld_b_d8, "LD B, d8");
		DEF_INSTR(0x000E, ld_c_d8, "LD C, d8");
		DEF_INSTR(0x0016, ld_d_d8, "LD D, d8");
		DEF_INSTR(0x001E, ld_e_d8, "LD E, d8");
		DEF_INSTR(0x0026, ld_h_d8, "LD H, d8");
		DEF_INSTR(0x002E, ld_l_d8, "LD L, d8");
		DEF_INSTR(0x007E, ld_a__hl_, "LD A, (HL)");
		DEF_INSTR(0x0046, ld_b__hl_, "LD B, (HL)");
		DEF_INSTR(0x004E, ld_c__hl_, "LD C, (HL)");
		DEF_INSTR(0x0056, ld_d__hl_, "LD D, (HL)");
		DEF_INSTR(0x005E, ld_e__hl_, "LD E, (HL)");
		DEF_INSTR(0x0066, ld_h__hl_, "LD H, (HL)");
		DEF_INSTR(0x006E, ld_l__hl_, "LD L, (HL)");
		DEF_INSTR(0x0077, ld__hl__a, "LD (HL), A");
		DEF_INSTR(0x0070, ld__hl__b, "LD (HL), B");
		DEF_INSTR(0x0071, ld__hl__c, "LD (HL), C");
		DEF_INSTR(0x0072, ld__hl__d, "LD (HL), D");
		DEF_INSTR(0x0073, ld__hl__e, "LD (HL), E");
		DEF_INSTR(0x0074, ld__hl__h, "LD (HL), H");
		DEF_INSTR(0x0075, ld__hl__l, "LD (HL), L");
		DEF_INSTR(0x0036, ld__hl__d8, "LD (HL), d8");
		DEF_INSTR(0x000A, ld_a__bc_, "LD A, (BC)");
		DEF_INSTR(0x001A, ld_a__de_, "LD A, (DE)");
		DEF_INSTR(0x00F2, ld_a__c_, "LD A, (C)");
		DEF_INSTR(0x00E2, ld__c__a, "LD (C), A");
		DEF_INSTR(0x00F0, ld_a__a8_, "LD A, (a8)");
		DEF_INSTR(0x00E0, ld__a8__a, "LD (a8), A");
		DEF_INSTR(0x00FA, ld_a__a16_, "LD A, (a16)");
		DEF_INSTR(0x00EA, ld__a16__a, "LD (a16), A");
		DEF_INSTR(0x002A, ld_a__hlp_, "LD A, (HL+)");
		DEF_INSTR(0x003A, ld_a__hlm_, "LD A, (HL-)");
		DEF_INSTR(0x0002, ld__bc__a, "LD (BC), A");
		DEF_INSTR(0x0012, ld__de__a, "LD (DE), A");
		DEF_INSTR(0x0022, ld__hlp__a, "LD (HL+), A");
		DEF_INSTR(0x0032, ld__hlm__a, "LD (HL-), A");
		DEF_INSTR(0x0001, ld_bc_d16, "LD BC, d16");
		DEF_INSTR(0x0011, ld_de_d16, "LD DE, d16");
		DEF_INSTR(0x0021, ld_hl_d16, "LD HL, d16");
		DEF_INSTR(0x0031, ld_sp_d16, "LD SP, d16");
		DEF_INSTR(0x00F9, ld_sp_hl, "LD SP, HL");
		DEF_INSTR(0x00C5, push_bc, "PUSH BC");
		DEF_INSTR(0x00D5, push_de, "PUSH DE");
		DEF_INSTR(0x00E5, push_hl, "PUSH HL");
		DEF_INSTR(0x00F5, push_af, "PUSH AF");
		DEF_INSTR(0x00C1, pop_bc, "POP BC");
		DEF_INSTR(0x00D1, pop_de, "POP DE");
		DEF_INSTR(0x00E1, pop_hl, "POP HL");
		DEF_INSTR(0x00F1, pop_af, "POP AF");
		DEF_INSTR(0x00F8, ld_hl_spps8, "LD HL, SP+s8");
		DEF_INSTR(0x0008, ld__a16__sp, "LD (a16), SP");
		DEF_INSTR(0x0087, add_a_a, "ADD A, A");
		DEF_INSTR(0x0080, add_a_b, "ADD A, B");
		DEF_INSTR(0x0081, add_a_c, "ADD A, C");
		DEF_INSTR(0x0082, add_a_d, "ADD A, D");
		DEF_INSTR(0x0083, add_a_e, "ADD A, E");
		DEF_INSTR(0x0084, add_a_h, "ADD A, H");
		DEF_INSTR(0x0085, add_a_l, "ADD A, L");
		DEF_INSTR(0x00C6, add_a_d8, "ADD A, d8");
		DEF_INSTR(0x0086, add_a__hl_, "ADD A, (HL)");
		DEF_INSTR(0x008F, adc_a_a, "ADC A, A");
		DEF_INSTR(0x0088, adc_a_b, "ADC A, B");
		DEF_INSTR(0x0089, adc_a_c, "ADC A, C");
		DEF_INSTR(0x008A, adc_a_d, "ADC A, D");
		DEF_INSTR(0x008B, adc_a_e, "ADC A, E");
		DEF_INSTR(0x008C, adc_a_h, "ADC A, H");
		DEF_INSTR(0x008D, adc_a_l, "ADC A, L");
		DEF_INSTR(0x00CE, adc_a_d8, "ADC A, d8");
		DEF_INSTR(0x008E, adc_a__hl_, "ADC A, (HL)");
		DEF_INSTR(0x0097, sub_a, "SUB A");
		DEF_INSTR(0x0090, sub_b, "SUB B");
		DEF_INSTR(0x0091, sub_c, "SUB C");
		DEF_INSTR(0x0092, sub_d, "SUB D");
		DEF_INSTR(0x0093, sub_e, "SUB E");
		DEF_INSTR(0x0094, sub_h, "SUB H");
		DEF_INSTR(0x0095, sub_l, "SUB L");
		DEF_INSTR(0x00D6, sub_d8, "SUB d8");
		DEF_INSTR(0x0096, sub__hl_, "SUB (HL)");
		DEF_INSTR(0x009F, sbc_a_a, "SBC A, A");
		DEF_INSTR(0x0098, sbc_a_b, "SBC A, B");
		DEF_INSTR(0x0099, sbc_a_c, "SBC A, C");
		DEF_INSTR(0x009A, sbc_a_d, "SBC A, D");
		DEF_INSTR(0x009B, sbc_a_e, "SBC A, E");
		DEF_INSTR(0x009C, sbc_a_h, "SBC A, H");
		DEF_INSTR(0x009D, sbc_a_l, "SBC A, L");
		DEF_INSTR(0x00DE, sbc_a_d8, "SBC A, d8");
		DEF_INSTR(0x009E, sbc_a__hl_, "SBC A, (HL)");
		DEF_INSTR(0x00A7, and_a, "AND A");
		DEF_INSTR(0x00A0, and_b, "AND B");
		DEF_INSTR(0x00A1, and_c, "AND C");
		DEF_INSTR(0x00A2, and_d, "AND D");
		DEF_INSTR(0x00A3, and_e, "AND E");
		DEF_INSTR(0x00A4, and_h, "AND H");
		DEF_INSTR(0x00A5, and_l, "AND L");
		DEF_INSTR(0x00E6, and_d8, "AND d8");
		DEF_INSTR(0x00A6, and__hl_, "AND (HL)");
		DEF_INSTR(0x00B7, or_a, "OR A");
		DEF_INSTR(0x00B0, or_b, "OR B");
		DEF_INSTR(0x00B1, or_c, "OR C");
		DEF_INSTR(0x00B2, or_d, "OR D");
		DEF_INSTR(0x00B3, or_e, "OR E");
		DEF_INSTR(0x00B4, or_h, "OR H");
		DEF_INSTR(0x00B5, or_l, "OR L");
		DEF_INSTR(0x00F6, or_d8, "OR d8");
		DEF_INSTR(0x00B6, or__hl_, "OR (HL)");
		DEF_INSTR(0x00AF, xor_a, "XOR A");
		DEF_INSTR(0x00A8, xor_b, "XOR B");
		DEF_INSTR(0x00A9, xor_c, "XOR C");
		DEF_INSTR(0x00AA, xor_d, "XOR D");
		DEF_INSTR(0x00AB, xor_e, "XOR E");
		DEF_INSTR(0x00AC, xor_h, "XOR H");
		DEF_INSTR(0x00AD, xor_l, "XOR L");
		DEF_INSTR(0x00EE, xor_d8, "XOR d8");
		DEF_INSTR(0x00AE, xor__hl_, "XOR (HL)");
		DEF_INSTR(0x00BF, cp_a, "CP A");
		DEF_INSTR(0x00B8, cp_b, "CP B");
		DEF_INSTR(0x00B9, cp_c, "CP C");
		DEF_INSTR(0x00BA, cp_d, "CP D");
		DEF_INSTR(0x00BB, cp_e, "CP E");
		DEF_INSTR(0x00BC, cp_h, "CP H");
		DEF_INSTR(0x00BD, cp_l, "CP L");
		DEF_INSTR(0x00FE, cp_d8, "CP d8");
		DEF_INSTR(0x00BE, cp__hl_, "CP (HL)");
		DEF_INSTR(0x003C, inc_a, "INC A");
		DEF_INSTR(0x0004, inc_b, "INC B");
		DEF_INSTR(0x000C, inc_c, "INC C");
		DEF_INSTR(0x0014, inc_d, "INC D");
		DEF_INSTR(0x001C, inc_e, "INC E");
		DEF_INSTR(0x0024, inc_h, "INC H");
		DEF_INSTR(0x002C, inc_l, "INC L");
		DEF_INSTR(0x0034, inc__hl_, "INC (HL)");
		DEF_INSTR(0x003D, dec_a, "DEC A");
		DEF_INSTR(0x0005, dec_b, "DEC B");
		DEF_INSTR(0x000D, dec_c, "DEC C");
		DEF_INSTR(0x0015, dec_d, "DEC D");
		DEF_INSTR(0x001D, dec_e, "DEC E");
		DEF_INSTR(0x0025, dec_h, "DEC H");
		DEF_INSTR(0x002D, dec_l, "DEC L");
		DEF_INSTR(0x0035, dec__hl_, "DEC (HL)");
		DEF_INSTR(0x0009, add_hl_bc, "ADD HL, BC");
		DEF_INSTR(0x0019, add_hl_de, "ADD HL, DE");
		DEF_INSTR(0x0029, add_hl_hl, "ADD HL, HL");
		DEF_INSTR(0x0039, add_hl_sp, "ADD HL, SP");
		DEF_INSTR(0x00E8, add_sp_s8, "ADD SP, s8");
		DEF_INSTR(0x0003, inc_bc, "INC BC");
		DEF_INSTR(0x0013, inc_de, "INC DE");
		DEF_INSTR(0x0023, inc_hl, "INC HL");
		DEF_INSTR(0x0033, inc_sp, "INC SP");
		DEF_INSTR(0x000B, dec_bc, "DEC BC");
		DEF_INSTR(0x001B, dec_de, "DEC DE");
		DEF_INSTR(0x002B, dec_hl, "DEC HL");
		DEF_INSTR(0x003B, dec_sp, "DEC SP");
		DEF_INSTR(0x0007, rlca, "RLCA");
		DEF_INSTR(0x0017, rla, "RLA");
		DEF_INSTR(0x000F, rrca, "RRCA");
		DEF_INSTR(0x001F, rra, "RRA");
		DEF_INSTR(0xCB07, rlc_a, "RLC A");
		DEF_INSTR(0xCB00, rlc_b, "RLC B");
		DEF_INSTR(0xCB01, rlc_c, "RLC C");
		DEF_INSTR(0xCB02, rlc_d, "RLC D");
		DEF_INSTR(0xCB03, rlc_e, "RLC E");
		DEF_INSTR(0xCB04, rlc_h, "RLC H");
		DEF_INSTR(0xCB05, rlc_l, "RLC L");
		DEF_INSTR(0xCB06, rlc__hl_, "RLC (HL)");
		DEF_INSTR(0xCB17, rl_a, "RL A");
		DEF_INSTR(0xCB10, rl_b, "RL B");
		DEF_INSTR(0xCB11, rl_c, "RL C");
		DEF_INSTR(0xCB12, rl_d, "RL D");
		DEF_INSTR(0xCB13, rl_e, "RL E");
		DEF_INSTR(0xCB14, rl_h, "RL H");
		DEF_INSTR(0xCB15, rl_l, "RL L");
		DEF_INSTR(0xCB16, rl__hl_, "RL (HL)");
		DEF_INSTR(0xCB0F, rrc_a, "RRC A");
		DEF_INSTR(0xCB08, rrc_b, "RRC B");
		DEF_INSTR(0xCB09, rrc_c, "RRC C");
		DEF_INSTR(0xCB0A, rrc_d, "RRC D");
		DEF_INSTR(0xCB0B, rrc_e, "RRC E");
		DEF_INSTR(0xCB0C, rrc_h, "RRC H");
		DEF_INSTR(0xCB0D, rrc_l, "RRC L");
		DEF_INSTR(0xCB0E, rrc__hl_, "RRC (HL)");
		DEF_INSTR(0xCB1F, rr_a, "RR A");
		DEF_INSTR(0xCB18, rr_b, "RR B");
		DEF_INSTR(0xCB19, rr_c, "RR C");
		DEF_INSTR(0xCB1A, rr_d, "RR D");
		DEF_INSTR(0xCB1B, rr_e, "RR E");
		DEF_INSTR(0xCB1C, rr_h, "RR H");
		DEF_INSTR(0xCB1D, rr_l, "RR L");
		DEF_INSTR(0xCB1E, rr__hl_, "RR (HL)");
		DEF_INSTR(0xCB27, sla_a, "SLA A");
		DEF_INSTR(0xCB20, sla_b, "SLA B");
		DEF_INSTR(0xCB21, sla_c, "SLA C");
		DEF_INSTR(0xCB22, sla_d, "SLA D");
		DEF_INSTR(0xCB23, sla_e, "SLA E");
		DEF_INSTR(0xCB24, sla_h, "SLA H");
		DEF_INSTR(0xCB25, sla_l, "SLA L");
		DEF_INSTR(0xCB26, sla__hl_, "SLA (HL)");
		DEF_INSTR(0xCB2F, sra_a, "SRA A");
		DEF_INSTR(0xCB28, sra_b, "SRA B");
		DEF_INSTR(0xCB29, sra_c, "SRA C");
		DEF_INSTR(0xCB2A, sra_d, "SRA D");
		DEF_INSTR(0xCB2B, sra_e, "SRA E");
		DEF_INSTR(0xCB2C, sra_h, "SRA H");
		DEF_INSTR(0xCB2D, sra_l, "SRA L");
		DEF_INSTR(0xCB2E, sra__hl_, "SRA (HL)");
		DEF_INSTR(0xCB3F, srl_a, "SRL A");
		DEF_INSTR(0xCB38, srl_b, "SRL B");
		DEF_INSTR(0xCB39, srl_c, "SRL C");
		DEF_INSTR(0xCB3A, srl_d, "SRL D");
		DEF_INSTR(0xCB3B, srl_e, "SRL E");
		DEF_INSTR(0xCB3C, srl_h, "SRL H");
		DEF_INSTR(0xCB3D, srl_l, "SRL L");
		DEF_INSTR(0xCB3E, srl__hl_, "SRL (HL)");
		DEF_INSTR(0xCB37, swap_a, "SWAP A");
		DEF_INSTR(0xCB30, swap_b, "SWAP B");
		DEF_INSTR(0xCB31, swap_c, "SWAP C");
		DEF_INSTR(0xCB32, swap_d, "SWAP D");
		DEF_INSTR(0xCB33, swap_e, "SWAP E");
		DEF_INSTR(0xCB34, swap_h, "SWAP H");
		DEF_INSTR(0xCB35, swap_l, "SWAP L");
		DEF_INSTR(0xCB36, swap__hl_, "SWAP (HL)");
		DEF_INSTR(0xCB47, bit_0_a, "BIT 0, A");
		DEF_INSTR(0xCB40, bit_0_b, "BIT 0, B");
		DEF_INSTR(0xCB41, bit_0_c, "BIT 0, C");
		DEF_INSTR(0xCB42, bit_0_d, "BIT 0, D");
		DEF_INSTR(0xCB43, bit_0_e, "BIT 0, E");
		DEF_INSTR(0xCB44, bit_0_h, "BIT 0, H");
		DEF_INSTR(0xCB45, bit_0_l, "BIT 0, L");
		DEF_INSTR(0xCB4F, bit_1_a, "BIT 1, A");
		DEF_INSTR(0xCB48, bit_1_b, "BIT 1, B");
		DEF_INSTR(0xCB49, bit_1_c, "BIT 1, C");
		DEF_INSTR(0xCB4A, bit_1_d, "BIT 1, D");
		DEF_INSTR(0xCB4B, bit_1_e, "BIT 1, E");
		DEF_INSTR(0xCB4C, bit_1_h, "BIT 1, H");
		DEF_INSTR(0xCB4D, bit_1_l, "BIT 1, L");
		DEF_INSTR(0xCB57, bit_2_a, "BIT 2, A");
		DEF_INSTR(0xCB50, bit_2_b, "BIT 2, B");
		DEF_INSTR(0xCB51, bit_2_c, "BIT 2, C");
		DEF_INSTR(0xCB52, bit_2_d, "BIT 2, D");
		DEF_INSTR(0xCB53, bit_2_e, "BIT 2, E");
		DEF_INSTR(0xCB54, bit_2_h, "BIT 2, H");
		DEF_INSTR(0xCB55, bit_2_l, "BIT 2, L");
		DEF_INSTR(0xCB5F, bit_3_a, "BIT 3, A");
		DEF_INSTR(0xCB58, bit_3_b, "BIT 3, B");
		DEF_INSTR(0xCB59, bit_3_c, "BIT 3, C");
		DEF_INSTR(0xCB5A, bit_3_d, "BIT 3, D");
		DEF_INSTR(0xCB5B, bit_3_e, "BIT 3, E");
		DEF_INSTR(0xCB5C, bit_3_h, "BIT 3, H");
		DEF_INSTR(0xCB5D, bit_3_l, "BIT 3, L");
		DEF_INSTR(0xCB67, bit_4_a, "BIT 4, A");
		DEF_INSTR(0xCB60, bit_4_b, "BIT 4, B");
		DEF_INSTR(0xCB61, bit_4_c, "BIT 4, C");
		DEF_INSTR(0xCB62, bit_4_d, "BIT 4, D");
		DEF_INSTR(0xCB63, bit_4_e, "BIT 4, E");
		DEF_INSTR(0xCB64, bit_4_h, "BIT 4, H");
		DEF_INSTR(0xCB65, bit_4_l, "BIT 4, L");
		DEF_INSTR(0xCB6F, bit_5_a, "BIT 5, A");
		DEF_INSTR(0xCB68, bit_5_b, "BIT 5, B");
		DEF_INSTR(0xCB69, bit_5_c, "BIT 5, C");
		DEF_INSTR(0xCB6A, bit_5_d, "BIT 5, D");
		DEF_INSTR(0xCB6B, bit_5_e, "BIT 5, E");
		DEF_INSTR(0xCB6C, bit_5_h, "BIT 5, H");
		DEF_INSTR(0xCB6D, bit_5_l, "BIT 5, L");
		DEF_INSTR(0xCB77, bit_6_a, "BIT 6, A");
		DEF_INSTR(0xCB70, bit_6_b, "BIT 6, B");
		DEF_INSTR(0xCB71, bit_6_c, "BIT 6, C");
		DEF_INSTR(0xCB72, bit_6_d, "BIT 6, D");
		DEF_INSTR(0xCB73, bit_6_e, "BIT 6, E");
		DEF_INSTR(0xCB74, bit_6_h, "BIT 6, H");
		DEF_INSTR(0xCB75, bit_6_l, "BIT 6, L");
		DEF_INSTR(0xCB7F, bit_7_a, "BIT 7, A");
		DEF_INSTR(0xCB78, bit_7_b, "BIT 7, B");
		DEF_INSTR(0xCB79, bit_7_c, "BIT 7, C");
		DEF_INSTR(0xCB7A, bit_7_d, "BIT 7, D");
		DEF_INSTR(0xCB7B, bit_7_e, "BIT 7, E");
		DEF_INSTR(0xCB7C, bit_7_h, "BIT 7, H");
		DEF_INSTR(0xCB7D, bit_7_l, "BIT 7, L");
		DEF_INSTR(0xCB46, bit_0__hl_, "BIT 0, (HL)");
		DEF_INSTR(0xCB4E, bit_1__hl_, "BIT 1, (HL)");
		DEF_INSTR(0xCB56, bit_2__hl_, "BIT 2, (HL)");
		DEF_INSTR(0xCB5E, bit_3__hl_, "BIT 3, (HL)");
		DEF_INSTR(0xCB66, bit_4__hl_, "BIT 4, (HL)");
		DEF_INSTR(0xCB6E, bit_5__hl_, "BIT 5, (HL)");
		DEF_INSTR(0xCB76, bit_6__hl_, "BIT 6, (HL)");
		DEF_INSTR(0xCB7E, bit_7__hl_, "BIT 7, (HL)");
		DEF_INSTR(0xCBC7, set_0_a, "SET 0, A");
		DEF_INSTR(0xCBC0, set_0_b, "SET 0, B");
		DEF_INSTR(0xCBC1, set_0_c, "SET 0, C");
		DEF_INSTR(0xCBC2, set_0_d, "SET 0, D");
		DEF_INSTR(0xCBC3, set_0_e, "SET 0, E");
		DEF_INSTR(0xCBC4, set_0_h, "SET 0, H");
		DEF_INSTR(0xCBC5, set_0_l, "SET 0, L");
		DEF_INSTR(0xCBCF, set_1_a, "SET 1, A");
		DEF_INSTR(0xCBC8, set_1_b, "SET 1, B");
		DEF_INSTR(0xCBC9, set_1_c, "SET 1, C");
		DEF_INSTR(0xCBCA, set_1_d, "SET 1, D");
		DEF_INSTR(0xCBCB, set_1_e, "SET 1, E");
		DEF_INSTR(0xCBCC, set_1_h, "SET 1, H");
		DEF_INSTR(0xCBCD, set_1_l, "SET 1, L");
		DEF_INSTR(0xCBD7, set_2_a, "SET 2, A");
		DEF_INSTR(0xCBD0, set_2_b, "SET 2, B");
		DEF_INSTR(0xCBD1, set_2_c, "SET 2, C");
		DEF_INSTR(0xCBD2, set_2_d, "SET 2, D");
		DEF_INSTR(0xCBD3, set_2_e, "SET 2, E");
		DEF_INSTR(0xCBD4, set_2_h, "SET 2, H");
		DEF_INSTR(0xCBD5, set_2_l, "SET 2, L");
		DEF_INSTR(0xCBDF, set_3_a, "SET 3, A");
		DEF_INSTR(0xCBD8, set_3_b, "SET 3, B");
		DEF_INSTR(0xCBD9, set_3_c, "SET 3, C");
		DEF_INSTR(0xCBDA, set_3_d, "SET 3, D");
		DEF_INSTR(0xCBDB, set_3_e, "SET 3, E");
		DEF_INSTR(0xCBDC, set_3_h, "SET 3, H");
		DEF_INSTR(0xCBDD, set_3_l, "SET 3, L");
		DEF_INSTR(0xCBE7, set_4_a, "SET 4, A");
		DEF_INSTR(0xCBE0, set_4_b, "SET 4, B");
		DEF_INSTR(0xCBE1, set_4_c, "SET 4, C");
		DEF_INSTR(0xCBE2, set_4_d, "SET 4, D");
		DEF_INSTR(0xCBE3, set_4_e, "SET 4, E");
		DEF_INSTR(0xCBE4, set_4_h, "SET 4, H");
		DEF_INSTR(0xCBE5, set_4_l, "SET 4, L");
		DEF_INSTR(0xCBEF, set_5_a, "SET 5, A");
		DEF_INSTR(0xCBE8, set_5_b, "SET 5, B");
		DEF_INSTR(0xCBE9, set_5_c, "SET 5, C");
		DEF_INSTR(0xCBEA, set_5_d, "SET 5, D");
		DEF_INSTR(0xCBEB, set_5_e, "SET 5, E");
		DEF_INSTR(0xCBEC, set_5_h, "SET 5, H");
		DEF_INSTR(0xCBED, set_5_l, "SET 5, L");
		DEF_INSTR(0xCBF7, set_6_a, "SET 6, A");
		DEF_INSTR(0xCBF0, set_6_b, "SET 6, B");
		DEF_INSTR(0xCBF1, set_6_c, "SET 6, C");
		DEF_INSTR(0xCBF2, set_6_d, "SET 6, D");
		DEF_INSTR(0xCBF3, set_6_e, "SET 6, E");
		DEF_INSTR(0xCBF4, set_6_h, "SET 6, H");
		DEF_INSTR(0xCBF5, set_6_l, "SET 6, L");
		DEF_INSTR(0xCBFF, set_7_a, "SET 7, A");
		DEF_INSTR(0xCBF8, set_7_b, "SET 7, B");
		DEF_INSTR(0xCBF9, set_7_c, "SET 7, C");
		DEF_INSTR(0xCBFA, set_7_d, "SET 7, D");
		DEF_INSTR(0xCBFB, set_7_e, "SET 7, E");
		DEF_INSTR(0xCBFC, set_7_h, "SET 7, H");
		DEF_INSTR(0xCBFD, set_7_l, "SET 7, L");
		DEF_INSTR(0xCBC6, set_0__hl_, "SET 0, (HL)");
		DEF_INSTR(0xCBCE, set_1__hl_, "SET 1, (HL)");
		DEF_INSTR(0xCBD6, set_2__hl_, "SET 2, (HL)");
		DEF_INSTR(0xCBDE, set_3__hl_, "SET 3, (HL)");
		DEF_INSTR(0xCBE6, set_4__hl_, "SET 4, (HL)");
		DEF_INSTR(0xCBEE, set_5__hl_, "SET 5, (HL)");
		DEF_INSTR(0xCBF6, set_6__hl_, "SET 6, (HL)");
		DEF_INSTR(0xCBFE, set_7__hl_, "SET 7, (HL)");
		DEF_INSTR(0xCB87, res_0_a, "RES 0, A");
		DEF_INSTR(0xCB80, res_0_b, "RES 0, B");
		DEF_INSTR(0xCB81, res_0_c, "RES 0, C");
		DEF_INSTR(0xCB82, res_0_d, "RES 0, D");
		DEF_INSTR(0xCB83, res_0_e, "RES 0, E");
		DEF_INSTR(0xCB84, res_0_h, "RES 0, H");
		DEF_INSTR(0xCB85, res_0_l, "RES 0, L");
		DEF_INSTR(0xCB8F, res_1_a, "RES 1, A");
		DEF_INSTR(0xCB88, res_1_b, "RES 1, B");
		DEF_INSTR(0xCB89, res_1_c, "RES 1, C");
		DEF_INSTR(0xCB8A, res_1_d, "RES 1, D");
		DEF_INSTR(0xCB8B, res_1_e, "RES 1, E");
		DEF_INSTR(0xCB8C, res_1_h, "RES 1, H");
		DEF_INSTR(0xCB8D, res_1_l, "RES 1, L");
		DEF_INSTR(0xCB97, res_2_a, "RES 2, A");
		DEF_INSTR(0xCB90, res_2_b, "RES 2, B");
		DEF_INSTR(0xCB91, res_2_c, "RES 2, C");
		DEF_INSTR(0xCB92, res_2_d, "RES 2, D");
		DEF_INSTR(0xCB93, res_2_e, "RES 2, E");
		DEF_INSTR(0xCB94, res_2_h, "RES 2, H");
		DEF_INSTR(0xCB95, res_2_l, "RES 2, L");
		DEF_INSTR(0xCB9F, res_3_a, "RES 3, A");
		DEF_INSTR(0xCB98, res_3_b, "RES 3, B");
		DEF_INSTR(0xCB99, res_3_c, "RES 3, C");
		DEF_INSTR(0xCB9A, res_3_d, "RES 3, D");
		DEF_INSTR(0xCB9B, res_3_e, "RES 3, E");
		DEF_INSTR(0xCB9C, res_3_h, "RES 3, H");
		DEF_INSTR(0xCB9D, res_3_l, "RES 3, L");
		DEF_INSTR(0xCBA7, res_4_a, "RES 4, A");
		DEF_INSTR(0xCBA0, res_4_b, "RES 4, B");
		DEF_INSTR(0xCBA1, res_4_c, "RES 4, C");
		DEF_INSTR(0xCBA2, res_4_d, "RES 4, D");
		DEF_INSTR(0xCBA3, res_4_e, "RES 4, E");
		DEF_INSTR(0xCBA4, res_4_h, "RES 4, H");
		DEF_INSTR(0xCBA5, res_4_l, "RES 4, L");
		DEF_INSTR(0xCBAF, res_5_a, "RES 5, A");
		DEF_INSTR(0xCBA8, res_5_b, "RES 5, B");
		DEF_INSTR(0xCBA9, res_5_c, "RES 5, C");
		DEF_INSTR(0xCBAA, res_5_d, "RES 5, D");
		DEF_INSTR(0xCBAB, res_5_e, "RES 5, E");
		DEF_INSTR(0xCBAC, res_5_h, "RES 5, H");
		DEF_INSTR(0xCBAD, res_5_l, "RES 5, L");
		DEF_INSTR(0xCBB7, res_6_a, "RES 6, A");
		DEF_INSTR(0xCBB0, res_6_b, "RES 6, B");
		DEF_INSTR(0xCBB1, res_6_c, "RES 6, C");
		DEF_INSTR(0xCBB2, res_6_d, "RES 6, D");
		DEF_INSTR(0xCBB3, res_6_e, "RES 6, E");
		DEF_INSTR(0xCBB4, res_6_h, "RES 6, H");
		DEF_INSTR(0xCBB5, res_6_l, "RES 6, L");
		DEF_INSTR(0xCBBF, res_7_a, "RES 7, A");
		DEF_INSTR(0xCBB8, res_7_b, "RES 7, B");
		DEF_INSTR(0xCBB9, res_7_c, "RES 7, C");
		DEF_INSTR(0xCBBA, res_7_d, "RES 7, D");
		DEF_INSTR(0xCBBB, res_7_e, "RES 7, E");
		DEF_INSTR(0xCBBC, res_7_h, "RES 7, H");
		DEF_INSTR(0xCBBD, res_7_l, "RES 7, L");
		DEF_INSTR(0xCB86, res_0__hl_, "RES 0, (HL)");
		DEF_INSTR(0xCB8E, res_1__hl_, "RES 1, (HL)");
		DEF_INSTR(0xCB96, res_2__hl_, "RES 2, (HL)");
		DEF_INSTR(0xCB9E, res_3__hl_, "RES 3, (HL)");
		DEF_INSTR(0xCBA6, res_4__hl_, "RES 4, (HL)");
		DEF_INSTR(0xCBAE, res_5__hl_, "RES 5, (HL)");
		DEF_INSTR(0xCBB6, res_6__hl_, "RES 6, (HL)");
		DEF_INSTR(0xCBBE, res_7__hl_, "RES 7, (HL)");
		DEF_INSTR(0x00C3, jp_a16, "JP a16");
		DEF_INSTR(0x00C2, jp_nz_a16, "JP NZ, a16");
		DEF_INSTR(0x00CA, jp_z_a16, "JP Z, a16");
		DEF_INSTR(0x00D2, jp_nc_a16, "JP NC, a16");
		DEF_INSTR(0x00DA, jp_c_a16, "JP C, a16");
		DEF_INSTR(0x0018, jr_s8, "JR s8");
		DEF_INSTR(0x0020, jr_nz_s8, "JR NZ, s8");
		DEF_INSTR(0x0028, jr_z_s8, "JR Z, s8");
		DEF_INSTR(0x0030, jr_nc_s8, "JR NC, s8");
		DEF_INSTR(0x0038, jr_c_s8, "JR C, s8");
		DEF_INSTR(0x00E9, jp_hl, "JP HL");
		DEF_INSTR(0x00CD, call_a16, "CALL a16");
		DEF_INSTR(0x00C4, call_nz_a16, "CALL NZ, a16");
		DEF_INSTR(0x00CC, call_z_a16, "CALL Z, a16");
		DEF_INSTR(0x00D4, call_nc_a16, "CALL NC, a16");
		DEF_INSTR(0x00DC, call_c_a16, "CALL C, a16");
		DEF_INSTR(0x00C9, ret, "RET");
		DEF_INSTR(0x00D9, reti, "RETI");
		DEF_INSTR(0x00C0, ret_nz, "RET NZ");
		DEF_INSTR(0x00C8, ret_z, "RET Z");
		DEF_INSTR(0x00D0, ret_nc, "RET NC");
		DEF_INSTR(0x00D8, ret_c, "RET C");
		DEF_INSTR(0x00C7, rst_0, "RST 0");
		DEF_INSTR(0x00CF, rst_1, "RST 1");
		DEF_INSTR(0x00D7, rst_2, "RST 2");
		DEF_INSTR(0x00DF, rst_3, "RST 3");
		DEF_INSTR(0x00E7, rst_4, "RST 4");
		DEF_INSTR(0x00EF, rst_5, "RST 5");
		DEF_INSTR(0x00F7, rst_6, "RST 6");
		DEF_INSTR(0x00FF, rst_7, "RST 7");
		DEF_INSTR(0x0027, daa, "DAA");
		DEF_INSTR(0x002F, cpl, "CPL");
		DEF_INSTR(0x0000, nop, "NOP");
		DEF_INSTR(0x003F, ccf, "CCF");
		DEF_INSTR(0x0037, scf, "SCF");
		DEF_INSTR(0x00F3, di, "DI");
		DEF_INSTR(0x00FB, ei, "EI");
		DEF_INSTR(0x0076, halt, "HALT");
		DEF_INSTR(0x0010, stop, "STOP");
	}
	
	namespace instructions {
			
		INST_INSTR(ld_a_a);
		INST_INSTR(ld_a_b);
		INST_INSTR(ld_a_c);
		INST_INSTR(ld_a_d);
		INST_INSTR(ld_a_e);
		INST_INSTR(ld_a_h);
		INST_INSTR(ld_a_l);
		INST_INSTR(ld_b_a);
		INST_INSTR(ld_b_b);
		INST_INSTR(ld_b_c);
		INST_INSTR(ld_b_d);
		INST_INSTR(ld_b_e);
		INST_INSTR(ld_b_h);
		INST_INSTR(ld_b_l);
		INST_INSTR(ld_c_a);
		INST_INSTR(ld_c_b);
		INST_INSTR(ld_c_c);
		INST_INSTR(ld_c_d);
		INST_INSTR(ld_c_e);
		INST_INSTR(ld_c_h);
		INST_INSTR(ld_c_l);
		INST_INSTR(ld_d_a);
		INST_INSTR(ld_d_b);
		INST_INSTR(ld_d_c);
		INST_INSTR(ld_d_d);
		INST_INSTR(ld_d_e);
		INST_INSTR(ld_d_h);
		INST_INSTR(ld_d_l);
		INST_INSTR(ld_e_a);
		INST_INSTR(ld_e_b);
		INST_INSTR(ld_e_c);
		INST_INSTR(ld_e_d);
		INST_INSTR(ld_e_e);
		INST_INSTR(ld_e_h);
		INST_INSTR(ld_e_l);
		INST_INSTR(ld_h_a);
		INST_INSTR(ld_h_b);
		INST_INSTR(ld_h_c);
		INST_INSTR(ld_h_d);
		INST_INSTR(ld_h_e);
		INST_INSTR(ld_h_h);
		INST_INSTR(ld_h_l);
		INST_INSTR(ld_l_a);
		INST_INSTR(ld_l_b);
		INST_INSTR(ld_l_c);
		INST_INSTR(ld_l_d);
		INST_INSTR(ld_l_e);
		INST_INSTR(ld_l_h);
		INST_INSTR(ld_l_l);
		INST_INSTR(ld_a_d8);
		INST_INSTR(ld_b_d8);
		INST_INSTR(ld_c_d8);
		INST_INSTR(ld_d_d8);
		INST_INSTR(ld_e_d8);
		INST_INSTR(ld_h_d8);
		INST_INSTR(ld_l_d8);
		INST_INSTR(ld_a__hl_);
		INST_INSTR(ld_b__hl_);
		INST_INSTR(ld_c__hl_);
		INST_INSTR(ld_d__hl_);
		INST_INSTR(ld_e__hl_);
		INST_INSTR(ld_h__hl_);
		INST_INSTR(ld_l__hl_);
		INST_INSTR(ld__hl__a);
		INST_INSTR(ld__hl__b);
		INST_INSTR(ld__hl__c);
		INST_INSTR(ld__hl__d);
		INST_INSTR(ld__hl__e);
		INST_INSTR(ld__hl__h);
		INST_INSTR(ld__hl__l);
		INST_INSTR(ld__hl__d8);
		INST_INSTR(ld_a__bc_);
		INST_INSTR(ld_a__de_);
		INST_INSTR(ld_a__c_);
		INST_INSTR(ld__c__a);
		INST_INSTR(ld_a__a8_);
		INST_INSTR(ld__a8__a);
		INST_INSTR(ld_a__a16_);
		INST_INSTR(ld__a16__a);
		INST_INSTR(ld_a__hlp_);
		INST_INSTR(ld_a__hlm_);
		INST_INSTR(ld__bc__a);
		INST_INSTR(ld__de__a);
		INST_INSTR(ld__hlp__a);
		INST_INSTR(ld__hlm__a);
		INST_INSTR(ld_bc_d16);
		INST_INSTR(ld_de_d16);
		INST_INSTR(ld_hl_d16);
		INST_INSTR(ld_sp_d16);
		INST_INSTR(ld_sp_hl);
		INST_INSTR(push_bc);
		INST_INSTR(push_de);
		INST_INSTR(push_hl);
		INST_INSTR(push_af);
		INST_INSTR(pop_bc);
		INST_INSTR(pop_de);
		INST_INSTR(pop_hl);
		INST_INSTR(pop_af);
		INST_INSTR(ld_hl_spps8);
		INST_INSTR(ld__a16__sp);
		INST_INSTR(add_a_a);
		INST_INSTR(add_a_b);
		INST_INSTR(add_a_c);
		INST_INSTR(add_a_d);
		INST_INSTR(add_a_e);
		INST_INSTR(add_a_h);
		INST_INSTR(add_a_l);
		INST_INSTR(add_a_d8);
		INST_INSTR(add_a__hl_);
		INST_INSTR(adc_a_a);
		INST_INSTR(adc_a_b);
		INST_INSTR(adc_a_c);
		INST_INSTR(adc_a_d);
		INST_INSTR(adc_a_e);
		INST_INSTR(adc_a_h);
		INST_INSTR(adc_a_l);
		INST_INSTR(adc_a_d8);
		INST_INSTR(adc_a__hl_);
		INST_INSTR(sub_a);
		INST_INSTR(sub_b);
		INST_INSTR(sub_c);
		INST_INSTR(sub_d);
		INST_INSTR(sub_e);
		INST_INSTR(sub_h);
		INST_INSTR(sub_l);
		INST_INSTR(sub_d8);
		INST_INSTR(sub__hl_);
		INST_INSTR(sbc_a_a);
		INST_INSTR(sbc_a_b);
		INST_INSTR(sbc_a_c);
		INST_INSTR(sbc_a_d);
		INST_INSTR(sbc_a_e);
		INST_INSTR(sbc_a_h);
		INST_INSTR(sbc_a_l);
		INST_INSTR(sbc_a_d8);
		INST_INSTR(sbc_a__hl_);
		INST_INSTR(and_a);
		INST_INSTR(and_b);
		INST_INSTR(and_c);
		INST_INSTR(and_d);
		INST_INSTR(and_e);
		INST_INSTR(and_h);
		INST_INSTR(and_l);
		INST_INSTR(and_d8);
		INST_INSTR(and__hl_);
		INST_INSTR(or_a);
		INST_INSTR(or_b);
		INST_INSTR(or_c);
		INST_INSTR(or_d);
		INST_INSTR(or_e);
		INST_INSTR(or_h);
		INST_INSTR(or_l);
		INST_INSTR(or_d8);
		INST_INSTR(or__hl_);
		INST_INSTR(xor_a);
		INST_INSTR(xor_b);
		INST_INSTR(xor_c);
		INST_INSTR(xor_d);
		INST_INSTR(xor_e);
		INST_INSTR(xor_h);
		INST_INSTR(xor_l);
		INST_INSTR(xor_d8);
		INST_INSTR(xor__hl_);
		INST_INSTR(cp_a);
		INST_INSTR(cp_b);
		INST_INSTR(cp_c);
		INST_INSTR(cp_d);
		INST_INSTR(cp_e);
		INST_INSTR(cp_h);
		INST_INSTR(cp_l);
		INST_INSTR(cp_d8);
		INST_INSTR(cp__hl_);
		INST_INSTR(inc_a);
		INST_INSTR(inc_b);
		INST_INSTR(inc_c);
		INST_INSTR(inc_d);
		INST_INSTR(inc_e);
		INST_INSTR(inc_h);
		INST_INSTR(inc_l);
		INST_INSTR(inc__hl_);
		INST_INSTR(dec_a);
		INST_INSTR(dec_b);
		INST_INSTR(dec_c);
		INST_INSTR(dec_d);
		INST_INSTR(dec_e);
		INST_INSTR(dec_h);
		INST_INSTR(dec_l);
		INST_INSTR(dec__hl_);
		INST_INSTR(add_hl_bc);
		INST_INSTR(add_hl_de);
		INST_INSTR(add_hl_hl);
		INST_INSTR(add_hl_sp);
		INST_INSTR(add_sp_s8);
		INST_INSTR(inc_bc);
		INST_INSTR(inc_de);
		INST_INSTR(inc_hl);
		INST_INSTR(inc_sp);
		INST_INSTR(dec_bc);
		INST_INSTR(dec_de);
		INST_INSTR(dec_hl);
		INST_INSTR(dec_sp);
		INST_INSTR(rlca);
		INST_INSTR(rla);
		INST_INSTR(rrca);
		INST_INSTR(rra);
		INST_INSTR(rlc_a);
		INST_INSTR(rlc_b);
		INST_INSTR(rlc_c);
		INST_INSTR(rlc_d);
		INST_INSTR(rlc_e);
		INST_INSTR(rlc_h);
		INST_INSTR(rlc_l);
		INST_INSTR(rlc__hl_);
		INST_INSTR(rl_a);
		INST_INSTR(rl_b);
		INST_INSTR(rl_c);
		INST_INSTR(rl_d);
		INST_INSTR(rl_e);
		INST_INSTR(rl_h);
		INST_INSTR(rl_l);
		INST_INSTR(rl__hl_);
		INST_INSTR(rrc_a);
		INST_INSTR(rrc_b);
		INST_INSTR(rrc_c);
		INST_INSTR(rrc_d);
		INST_INSTR(rrc_e);
		INST_INSTR(rrc_h);
		INST_INSTR(rrc_l);
		INST_INSTR(rrc__hl_);
		INST_INSTR(rr_a);
		INST_INSTR(rr_b);
		INST_INSTR(rr_c);
		INST_INSTR(rr_d);
		INST_INSTR(rr_e);
		INST_INSTR(rr_h);
		INST_INSTR(rr_l);
		INST_INSTR(rr__hl_);
		INST_INSTR(sla_a);
		INST_INSTR(sla_b);
		INST_INSTR(sla_c);
		INST_INSTR(sla_d);
		INST_INSTR(sla_e);
		INST_INSTR(sla_h);
		INST_INSTR(sla_l);
		INST_INSTR(sla__hl_);
		INST_INSTR(sra_a);
		INST_INSTR(sra_b);
		INST_INSTR(sra_c);
		INST_INSTR(sra_d);
		INST_INSTR(sra_e);
		INST_INSTR(sra_h);
		INST_INSTR(sra_l);
		INST_INSTR(sra__hl_);
		INST_INSTR(srl_a);
		INST_INSTR(srl_b);
		INST_INSTR(srl_c);
		INST_INSTR(srl_d);
		INST_INSTR(srl_e);
		INST_INSTR(srl_h);
		INST_INSTR(srl_l);
		INST_INSTR(srl__hl_);
		INST_INSTR(swap_a);
		INST_INSTR(swap_b);
		INST_INSTR(swap_c);
		INST_INSTR(swap_d);
		INST_INSTR(swap_e);
		INST_INSTR(swap_h);
		INST_INSTR(swap_l);
		INST_INSTR(swap__hl_);
		INST_INSTR(bit_0_a);
		INST_INSTR(bit_0_b);
		INST_INSTR(bit_0_c);
		INST_INSTR(bit_0_d);
		INST_INSTR(bit_0_e);
		INST_INSTR(bit_0_h);
		INST_INSTR(bit_0_l);
		INST_INSTR(bit_1_a);
		INST_INSTR(bit_1_b);
		INST_INSTR(bit_1_c);
		INST_INSTR(bit_1_d);
		INST_INSTR(bit_1_e);
		INST_INSTR(bit_1_h);
		INST_INSTR(bit_1_l);
		INST_INSTR(bit_2_a);
		INST_INSTR(bit_2_b);
		INST_INSTR(bit_2_c);
		INST_INSTR(bit_2_d);
		INST_INSTR(bit_2_e);
		INST_INSTR(bit_2_h);
		INST_INSTR(bit_2_l);
		INST_INSTR(bit_3_a);
		INST_INSTR(bit_3_b);
		INST_INSTR(bit_3_c);
		INST_INSTR(bit_3_d);
		INST_INSTR(bit_3_e);
		INST_INSTR(bit_3_h);
		INST_INSTR(bit_3_l);
		INST_INSTR(bit_4_a);
		INST_INSTR(bit_4_b);
		INST_INSTR(bit_4_c);
		INST_INSTR(bit_4_d);
		INST_INSTR(bit_4_e);
		INST_INSTR(bit_4_h);
		INST_INSTR(bit_4_l);
		INST_INSTR(bit_5_a);
		INST_INSTR(bit_5_b);
		INST_INSTR(bit_5_c);
		INST_INSTR(bit_5_d);
		INST_INSTR(bit_5_e);
		INST_INSTR(bit_5_h);
		INST_INSTR(bit_5_l);
		INST_INSTR(bit_6_a);
		INST_INSTR(bit_6_b);
		INST_INSTR(bit_6_c);
		INST_INSTR(bit_6_d);
		INST_INSTR(bit_6_e);
		INST_INSTR(bit_6_h);
		INST_INSTR(bit_6_l);
		INST_INSTR(bit_7_a);
		INST_INSTR(bit_7_b);
		INST_INSTR(bit_7_c);
		INST_INSTR(bit_7_d);
		INST_INSTR(bit_7_e);
		INST_INSTR(bit_7_h);
		INST_INSTR(bit_7_l);
		INST_INSTR(bit_0__hl_);
		INST_INSTR(bit_1__hl_);
		INST_INSTR(bit_2__hl_);
		INST_INSTR(bit_3__hl_);
		INST_INSTR(bit_4__hl_);
		INST_INSTR(bit_5__hl_);
		INST_INSTR(bit_6__hl_);
		INST_INSTR(bit_7__hl_);
		INST_INSTR(set_0_a);
		INST_INSTR(set_0_b);
		INST_INSTR(set_0_c);
		INST_INSTR(set_0_d);
		INST_INSTR(set_0_e);
		INST_INSTR(set_0_h);
		INST_INSTR(set_0_l);
		INST_INSTR(set_1_a);
		INST_INSTR(set_1_b);
		INST_INSTR(set_1_c);
		INST_INSTR(set_1_d);
		INST_INSTR(set_1_e);
		INST_INSTR(set_1_h);
		INST_INSTR(set_1_l);
		INST_INSTR(set_2_a);
		INST_INSTR(set_2_b);
		INST_INSTR(set_2_c);
		INST_INSTR(set_2_d);
		INST_INSTR(set_2_e);
		INST_INSTR(set_2_h);
		INST_INSTR(set_2_l);
		INST_INSTR(set_3_a);
		INST_INSTR(set_3_b);
		INST_INSTR(set_3_c);
		INST_INSTR(set_3_d);
		INST_INSTR(set_3_e);
		INST_INSTR(set_3_h);
		INST_INSTR(set_3_l);
		INST_INSTR(set_4_a);
		INST_INSTR(set_4_b);
		INST_INSTR(set_4_c);
		INST_INSTR(set_4_d);
		INST_INSTR(set_4_e);
		INST_INSTR(set_4_h);
		INST_INSTR(set_4_l);
		INST_INSTR(set_5_a);
		INST_INSTR(set_5_b);
		INST_INSTR(set_5_c);
		INST_INSTR(set_5_d);
		INST_INSTR(set_5_e);
		INST_INSTR(set_5_h);
		INST_INSTR(set_5_l);
		INST_INSTR(set_6_a);
		INST_INSTR(set_6_b);
		INST_INSTR(set_6_c);
		INST_INSTR(set_6_d);
		INST_INSTR(set_6_e);
		INST_INSTR(set_6_h);
		INST_INSTR(set_6_l);
		INST_INSTR(set_7_a);
		INST_INSTR(set_7_b);
		INST_INSTR(set_7_c);
		INST_INSTR(set_7_d);
		INST_INSTR(set_7_e);
		INST_INSTR(set_7_h);
		INST_INSTR(set_7_l);
		INST_INSTR(set_0__hl_);
		INST_INSTR(set_1__hl_);
		INST_INSTR(set_2__hl_);
		INST_INSTR(set_3__hl_);
		INST_INSTR(set_4__hl_);
		INST_INSTR(set_5__hl_);
		INST_INSTR(set_6__hl_);
		INST_INSTR(set_7__hl_);
		INST_INSTR(res_0_a);
		INST_INSTR(res_0_b);
		INST_INSTR(res_0_c);
		INST_INSTR(res_0_d);
		INST_INSTR(res_0_e);
		INST_INSTR(res_0_h);
		INST_INSTR(res_0_l);
		INST_INSTR(res_1_a);
		INST_INSTR(res_1_b);
		INST_INSTR(res_1_c);
		INST_INSTR(res_1_d);
		INST_INSTR(res_1_e);
		INST_INSTR(res_1_h);
		INST_INSTR(res_1_l);
		INST_INSTR(res_2_a);
		INST_INSTR(res_2_b);
		INST_INSTR(res_2_c);
		INST_INSTR(res_2_d);
		INST_INSTR(res_2_e);
		INST_INSTR(res_2_h);
		INST_INSTR(res_2_l);
		INST_INSTR(res_3_a);
		INST_INSTR(res_3_b);
		INST_INSTR(res_3_c);
		INST_INSTR(res_3_d);
		INST_INSTR(res_3_e);
		INST_INSTR(res_3_h);
		INST_INSTR(res_3_l);
		INST_INSTR(res_4_a);
		INST_INSTR(res_4_b);
		INST_INSTR(res_4_c);
		INST_INSTR(res_4_d);
		INST_INSTR(res_4_e);
		INST_INSTR(res_4_h);
		INST_INSTR(res_4_l);
		INST_INSTR(res_5_a);
		INST_INSTR(res_5_b);
		INST_INSTR(res_5_c);
		INST_INSTR(res_5_d);
		INST_INSTR(res_5_e);
		INST_INSTR(res_5_h);
		INST_INSTR(res_5_l);
		INST_INSTR(res_6_a);
		INST_INSTR(res_6_b);
		INST_INSTR(res_6_c);
		INST_INSTR(res_6_d);
		INST_INSTR(res_6_e);
		INST_INSTR(res_6_h);
		INST_INSTR(res_6_l);
		INST_INSTR(res_7_a);
		INST_INSTR(res_7_b);
		INST_INSTR(res_7_c);
		INST_INSTR(res_7_d);
		INST_INSTR(res_7_e);
		INST_INSTR(res_7_h);
		INST_INSTR(res_7_l);
		INST_INSTR(res_0__hl_);
		INST_INSTR(res_1__hl_);
		INST_INSTR(res_2__hl_);
		INST_INSTR(res_3__hl_);
		INST_INSTR(res_4__hl_);
		INST_INSTR(res_5__hl_);
		INST_INSTR(res_6__hl_);
		INST_INSTR(res_7__hl_);
		INST_INSTR(jp_a16);
		INST_INSTR(jp_nz_a16);
		INST_INSTR(jp_z_a16);
		INST_INSTR(jp_nc_a16);
		INST_INSTR(jp_c_a16);
		INST_INSTR(jr_s8);
		INST_INSTR(jr_nz_s8);
		INST_INSTR(jr_z_s8);
		INST_INSTR(jr_nc_s8);
		INST_INSTR(jr_c_s8);
		INST_INSTR(jp_hl);
		INST_INSTR(call_a16);
		INST_INSTR(call_nz_a16);
		INST_INSTR(call_z_a16);
		INST_INSTR(call_nc_a16);
		INST_INSTR(call_c_a16);
		INST_INSTR(ret);
		INST_INSTR(reti);
		INST_INSTR(ret_nz);
		INST_INSTR(ret_z);
		INST_INSTR(ret_nc);
		INST_INSTR(ret_c);
		INST_INSTR(rst_0);
		INST_INSTR(rst_1);
		INST_INSTR(rst_2);
		INST_INSTR(rst_3);
		INST_INSTR(rst_4);
		INST_INSTR(rst_5);
		INST_INSTR(rst_6);
		INST_INSTR(rst_7);
		INST_INSTR(daa);
		INST_INSTR(cpl);
		INST_INSTR(nop);
		INST_INSTR(ccf);
		INST_INSTR(scf);
		INST_INSTR(di);
		INST_INSTR(ei);
		INST_INSTR(halt);
		INST_INSTR(stop);
	}
}
#endif /* _H_OPCODES_H_ */